import numpy as np
from scipy.spatial.transform import Rotation as R
import uuid
import os

# 定义你的21个c2w矩阵
c2w_matrices = np.array([
    [[-0.2948, -0.1659, 0.9411, 3.7642],
     [0.9556, -0.0512, 0.2903, 1.1611],
     [0.0000, 0.9848, 0.1736, 0.6946],
     [0.0000, 0.0000, 0.0000, 1.0000]],
    [[-0.5633, -0.1435, 0.8137, 3.2547],
     [0.8262, -0.0978, 0.5548, 2.2190],
     [0.0000, 0.9848, 0.1736, 0.6946],
     [0.0000, 0.0000, 0.0000, 1.0000]],
    [[-0.7818, -0.1083, 0.6140, 2.4561],
     [0.6235, -0.1358, 0.7700, 3.0798],
     [0.0000, 0.9848, 0.1736, 0.6946],
     [0.0000, 0.0000, 0.0000, 1.0000]],
    [[-0.9309, -0.0634, 0.3598, 1.4392],
     [0.3653, -0.1616, 0.9167, 3.6669],
     [0.0000, 0.9848, 0.1736, 0.6946],
     [0.0000, 0.0000, 0.0000, 1.0000]],
    [[-0.9972, -0.0130, 0.0736, 0.2944],
     [0.0747, -0.1732, 0.9821, 3.9282],
     [0.0000, 0.9848, 0.1736, 0.6946],
     [0.0000, 0.0000, 0.0000, 1.0000]],
    [[-0.9749, 0.0386, -0.2191, -0.8766],
     [-0.2225, -0.1693, 0.9601, 3.8405],
     [0.0000, 0.9848, 0.1736, 0.6946],
     [0.0000, 0.0000, 0.0000, 1.0000]],
    [[-0.8660, 0.0868, -0.4924, -1.9696],
     [-0.5000, -0.1504, 0.8529, 3.4115],
     [0.0000, 0.9848, 0.1736, 0.6946],
     [0.0000, 0.0000, 0.0000, 1.0000]],
    [[-0.6802, 0.1273, -0.7219, -2.8877],
     [-0.7331, -0.1181, 0.6698, 2.6794],
     [0.0000, 0.9848, 0.1736, 0.6946],
     [0.0000, 0.0000, 0.0000, 1.0000]],
    [[-0.4339, 0.1565, -0.8873, -3.5491],
     [-0.9010, -0.0753, 0.4273, 1.7092],
     [0.0000, 0.9848, 0.1736, 0.6946],
     [0.0000, 0.0000, 0.0000, 1.0000]],
    [[-0.1490, 0.1717, -0.9738, -3.8952],
     [-0.9888, -0.0259, 0.1468, 0.5871],
     [0.0000, 0.9848, 0.1736, 0.6946],
     [0.0000, 0.0000, 0.0000, 1.0000]],
    [[0.1490, 0.1717, -0.9738, -3.8952],
     [-0.9888, 0.0259, -0.1468, -0.5871],
     [0.0000, 0.9848, 0.1736, 0.6946],
     [0.0000, 0.0000, 0.0000, 1.0000]],
    [[0.4339, 0.1565, -0.8873, -3.5491],
     [-0.9010, 0.0753, -0.4273, -1.7092],
     [0.0000, 0.9848, 0.1736, 0.6946],
     [0.0000, 0.0000, 0.0000, 1.0000]],
    [[0.6802, 0.1273, -0.7219, -2.8877],
     [-0.7331, 0.1181, -0.6698, -2.6794],
     [0.0000, 0.9848, 0.1736, 0.6946],
     [0.0000, 0.0000, 0.0000, 1.0000]],
    [[0.8660, 0.0868, -0.4924, -1.9696],
     [-0.5000, 0.1504, -0.8529, -3.4115],
     [0.0000, 0.9848, 0.1736, 0.6946],
     [0.0000, 0.0000, 0.0000, 1.0000]],
    [[0.9749, 0.0386, -0.2191, -0.8766],
     [-0.2225, 0.1693, -0.9601, -3.8405],
     [0.0000, 0.9848, 0.1736, 0.6946],
     [0.0000, 0.0000, 0.0000, 1.0000]],
    [[0.9972, -0.0130, 0.0736, 0.2944],
     [0.0747, 0.1732, -0.9821, -3.9282],
     [-0.0000, 0.9848, 0.1736, 0.6946],
     [0.0000, 0.0000, 0.0000, 1.0000]],
    [[0.9309, -0.0634, 0.3598, 1.4392],
     [0.3653, 0.1616, -0.9167, -3.6669],
     [-0.0000, 0.9848, 0.1736, 0.6946],
     [0.0000, 0.0000, 0.0000, 1.0000]],
    [[0.7818, -0.1083, 0.6140, 2.4561],
     [0.6235, 0.1358, -0.7700, -3.0798],
     [-0.0000, 0.9848, 0.1736, 0.6946],
     [0.0000, 0.0000, 0.0000, 1.0000]],
    [[0.5633, -0.1435, 0.8137, 3.2547],
     [0.8262, 0.0978, -0.5548, -2.2190],
     [-0.0000, 0.9848, 0.1736, 0.6946],
     [0.0000, 0.0000, 0.0000, 1.0000]],
    [[0.2948, -0.1659, 0.9411, 3.7642],
     [0.9556, 0.0512, -0.2903, -1.1611],
     [-0.0000, 0.9848, 0.1736, 0.6946],
     [0.0000, 0.0000, 0.0000, 1.0000]],
    [[0.0000, -0.1736, 0.9848, 3.9392],
     [1.0000, 0.0000, 0.0000, 0.0000],
     [0.0000, 0.9848, 0.1736, 0.6946],
     [0.0000, 0.0000, 0.0000, 1.0000]]
])

# c2w_tmp = c2w_matrices.copy()
# # y_axis = c2w_matrices
# c2w_matrices[:, :3, 1] = c2w_tmp[:, :3, 2]
# c2w_matrices[:, :3, 2] = c2w_tmp[:, :3, 1]
# c2w_matrices[:, 1, 3] = c2w_tmp[:, 2, 3]
# c2w_matrices[:, 2, 3] = c2w_tmp[:, 1, 3]
# cam_poses = c2w_matrices
# poses = np.array(cam_poses)
# x_axis = poses[:, :3, 0]
# y_axis = poses[:, :3, 1]
# z_axis = poses[:, :3, 2]
# center = poses[:, :3, 3]
# SAVE_ROOT = '.'
# np.savetxt(os.path.join(SAVE_ROOT, f"cam_z.txt"),
# np.concatenate([center, z_axis], axis=-1))
# np.savetxt(os.path.join(SAVE_ROOT, f"cam_y.txt"),
# np.concatenate([center, y_axis], axis=-1))
# np.savetxt(os.path.join(SAVE_ROOT, f"cam_x.txt"),
# np.concatenate([center, x_axis], axis=-1))
#
c2w_matrices[:, :3, 2] = c2w_matrices[:, :3, 2]*(-1)
c2w_matrices[:, :3, 1] = c2w_matrices[:, :3, 1]*(-1)

# os.exit()
# 假设图像文件名为 “image_01.jpg”, “image_02.jpg”, ..., “image_21.jpg”
image_names = [f"000000_{i:04d}.png" for i in range(0, 21)]

# Camera ID假设为1（如果每个图像不同的Camera ID，可进行修改）
camera_id = 1

image_lines = []

c2w_new = []
for i, c2w in enumerate(c2w_matrices):
    # 矩阵求逆
    w2c = np.linalg.inv(c2w)  @ np.array([[1, 0,0,0],
                                         [0, 0, -1, 0],
                                         [0, 1, 0, 0],
                                         [0, 0, 0, 1],

    ],dtype=np.float)@np.array([[0, 0, -1, 0],
                                        [0, 1, 0, 0],
                                         [1, 0, 0, 0],
                                         [0, 0, 0, 1],

    ], dtype=np.float).T

    # w2c_reverse = np.linalg.inv(w2c)
    # c2w_new.append(w2c_reverse)

    R_matrix = w2c[:3, :3]
    t = w2c[:3, 3]

    print('R', R_matrix)
    print('t', t)

    # 矩阵转四元数
    rotation = R.from_matrix(R_matrix)
    quaternion = rotation.as_quat()
    qw, qx, qy, qz = quaternion[3], quaternion[0], quaternion[1], quaternion[2]

    # 生成图像ID
    image_id = i + 1  # Assuming image IDs from 1 to 21

    # 生成Colmap格式的行
    result_line = f"{image_id} {qw} {qx} {qy} {qz} {t[0]} {t[1]} {t[2]} {camera_id} {image_names[i]}\n"
    image_lines.append(result_line)

# c2w_tmp = c2w_matrices.copy()
# # y_axis = c2w_matrices
# c2w_matrices[:, :3, 1] = c2w_tmp[:, :3, 2]
# c2w_matrices[:, :3, 2] = c2w_tmp[:, :3, 1]
# c2w_matrices[:, 1, 3] = c2w_tmp[:, 2, 3]
# c2w_matrices[:, 2, 3] = c2w_tmp[:, 1, 3]
# cam_poses = c2w_new
# poses = np.array(cam_poses)
# x_axis = poses[:, :3, 0]
# y_axis = poses[:, :3, 1]
# z_axis = poses[:, :3, 2]
# center = poses[:, :3, 3]
# SAVE_ROOT = '.'
# np.savetxt(os.path.join(SAVE_ROOT, f"cam_z.txt"),
# np.concatenate([center, z_axis], axis=-1))
# np.savetxt(os.path.join(SAVE_ROOT, f"cam_y.txt"),
# np.concatenate([center, y_axis], axis=-1))
# np.savetxt(os.path.join(SAVE_ROOT, f"cam_x.txt"),
# np.concatenate([center, x_axis], axis=-1))

# 整合所有行并写入images.txt文件
with open("images.txt", "w") as file:
    file.writelines(image_lines)

print("Done writing images.txt")